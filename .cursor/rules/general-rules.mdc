---
description: General rules for writing code
globs:
alwaysApply: true
---
# Cursor System Guidelines

This guide sets the ground rules for AI-assisted development in this codebase. It exists to keep code clean, consistent, and aligned with team preferences ‚Äî not to restrict, but to enable high-quality, focused work.

---

- Never touch or alter .env files. don't cp into them, don't move - nothing! You're risking deleting and corrupting all the env files with all the secrets.
- When trying to contant github mcp, remember the owner is project-vista-org
- Never ever commit or push or revery or do any github cli actions without me explicitly telling you to do so
- If I tell you to create a new branch, I also probably want you to checkout to that branch before writing code.
- For commit messages, keep them super short and concise. Just a couple of sentences max.

---

## üß† Philosophy: Code That Lasts

- **Clarity beats cleverness** ‚Äì Write for the reader, not the compiler.
- **Consistency > originality** ‚Äì Follow existing patterns, even if you could improve them. Ask first.
- **Small is beautiful** ‚Äì Keep everything as minimal as possible, without compromising intent.
- **Environment-aware** ‚Äì Don't break `dev`, `test`, or `prod`. Know where you're coding.

---

## üõ†Ô∏è Code Practices

**General:**
- Prefer explicit, readable logic. Avoid "smart" one-liners.
- Reuse before writing new. Search the codebase first.
- Break large files (>300 lines) into focused modules.
- Separate logic, UI, config, and data concerns clearly.

**Structure:**
- Don't change file/folder structures without a reason.
- If you replace something, remove the old version completely.
- Avoid throwaway code in main branches (e.g., debug scripts).
- Only mock inside tests. No fake data in dev or prod.
- Don't touch `.env` or secrets unless told to.

---

## ü§ù Collaboration Rules

- Stay scoped: only touch what the task requires.
- Don't refactor or rename unrelated code "just because."
- Add helpful comments where intent isn't obvious.
- Don't reformat entire files unless using a shared formatter (e.g., Prettier).
- If editing shared code, confirm it won't break dependencies.

---

## ‚ö†Ô∏è Safety Guidelines

- Never generate or commit secrets or passwords.
- Treat `.env` files and secrets as read-only unless told otherwise.
- Before changing core logic, check how broadly it's used.
- Avoid risky migrations or deletions without confirmation.

---

## ü§ñ AI Prompting Behavior

- If unclear, ask. Don't assume.
- For open-ended tasks, offer multiple solutions and request feedback.
- Keep explanations short and helpful.
- Prefer safe suggestions as comments unless the change is isolated and safe.
- Always assume there's history and context behind the current code.

---


This isn't about perfection.
It's about momentum ‚Äî without mess.
