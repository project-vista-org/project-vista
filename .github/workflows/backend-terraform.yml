name: Terraform Infrastructure

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: string
        default: "dev"
      aws_region:
        description: 'AWS region to deploy to'
        required: true
        type: string
        default: "eu-north-1"
      instance_type:
        description: 'EC2 instance type'
        required: true
        type: string
        default: "t2.micro"
    outputs:
      instance_ip:
        description: "The public IP of the created EC2 instance"
        value: ${{ jobs.terraform.outputs.instance_ip }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ inputs.aws_region }}
      ENVIRONMENT: ${{ inputs.environment }}
      TF_VAR_environment: ${{ inputs.environment }}
      TF_VAR_instance_type: ${{ inputs.instance_type }}
    outputs:
      instance_ip: ${{ steps.terraform_output.outputs.instance_ip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        id: init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan -var="environment=${{ env.ENVIRONMENT }}" -var="instance_type=${{ inputs.instance_type }}" -out=tfplan

      - name: Terraform Apply
        id: apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: Terraform Output
        id: terraform_output
        run: |
          cd terraform
          INSTANCE_IP=$(terraform output -raw instance_public_ip)
          echo "instance_ip=${INSTANCE_IP}" >> $GITHUB_OUTPUT
